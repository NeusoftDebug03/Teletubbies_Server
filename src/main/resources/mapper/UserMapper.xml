<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.debug.teletubbies.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.debug.teletubbies.entity.User">
        <id column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="passwd" property="passwd" jdbcType="VARCHAR"/>
        <result column="balance" property="balance" jdbcType="DECIMAL"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="phone_number" property="phoneNumber" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    user_id, username, passwd, balance, name, phone_number
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where user_id = #{userId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.debug.teletubbies.entity.User">
    insert into user (user_id, username, passwd, 
      balance, name, phone_number
      )
    values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{passwd,jdbcType=VARCHAR}, 
      #{balance,jdbcType=DECIMAL}, #{name,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="userId"
            parameterType="com.debug.teletubbies.entity.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="passwd != null">
                passwd,
            </if>
            <if test="balance != null">
                balance,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="phoneNumber != null">
                phone_number,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="passwd != null">
                #{passwd,jdbcType=VARCHAR},
            </if>
            <if test="balance != null">
                #{balance,jdbcType=DECIMAL},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="phoneNumber != null">
                #{phoneNumber,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.debug.teletubbies.entity.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="passwd != null">
                passwd = #{passwd,jdbcType=VARCHAR},
            </if>
            <if test="balance != null">
                balance = #{balance,jdbcType=DECIMAL},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="phoneNumber != null">
                phone_number = #{phoneNumber,jdbcType=VARCHAR},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.debug.teletubbies.entity.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      passwd = #{passwd,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=DECIMAL},
      name = #{name,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

    <!--User findUserByUsernameAndPasswd(@Param("username") String username, @Param("passwd") String passwd);-->
    <select id="findUserByUsernameAndPasswd" resultType="com.debug.teletubbies.entity.User">
    select * from user where username = #{username} and passwd = #{passwd}
  </select>

    <!--List<User> listAllUsers();-->
    <select id="listAllUsers" resultType="com.debug.teletubbies.entity.User">
    select * from user
  </select>

    <!--void deleteByUsername(String username);-->
    <delete id="deleteByUsername">
    delete from user where username = #{username}
  </delete>

    <!--User getUserByUsername(String username);-->
    <select id="getUserByUsername" resultType="com.debug.teletubbies.entity.User">
    select * from user where username = #{username}
  </select>

    <!--List<User> conditionalQueryUsers(User condition);-->
    <select id="conditionalQueryUsers" resultType="com.debug.teletubbies.entity.User">
        select * from user
        <where>
            <if test="userId != null">
                user_id = #{userId}
            </if>
            <if test="username != null">
                and username = #{username,jdbcType=VARCHAR}
            </if>
            <if test="name != null">
                and name = #{name,jdbcType=VARCHAR}
            </if>
            <if test="phoneNumber != null">
                and phone_number = #{phoneNumber,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

</mapper>